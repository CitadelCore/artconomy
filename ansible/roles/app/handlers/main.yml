---
- name: reload systemd
  shell: "systemctl daemon-reload"
  args:
    executable: "/bin/bash"

- name: migrator
  become: yes
  become_user: "{{ env_prefix }}"
  shell: "source ~/.profile && source ~/bin/activate && cd ~/artconomy && yes no | ./manage.py migrate && ./manage.py createinitialrevisions && echo '{{ migrations_status.digest }}' > ~/.migrations_hash"
  args:
    executable: "/bin/bash"
  notify:
    - Set up stripe users
    - Set up initial service plans
    - Create anonymous user

- name: stripe webhooks
  become: yes
  become_user: "{{ env_prefix }}"
  shell: "source ~/.profile && source ~/bin/activate && cd ~/artconomy && ./manage.py stripe_webhooks"
  args:
    executable: "/bin/bash"

- name: collect static assets
  become: yes
  become_user: "{{ env_prefix }}"
  shell: "source ~/.profile && source ~/bin/activate && cd ~/artconomy  && npm run build && ./manage.py collectstatic -v0 --noinput && cp webpack-stats{,-saved}.json && echo '{{ static_status.digest }}' > {{ home }}/.static_hash && git rev-parse --short HEAD > ~/artconomy/.static_hash_head"
  args:
    executable: "/bin/bash"
  environment:
    # Memory leak somewhere? This is enough for this task for now.
    NODE_OPTIONS: --max-old-space-size=6144
  register: result

- name: restart uwsgi
  service: name=uwsgi state=restarted

- name: restart daphne
  service: name=artconomy-daphne state=restarted

- name: set tg webhook
  become: yes
  become_user: "{{ env_prefix }}"
  shell: "source ~/.profile && source ~/bin/activate && cd ~/artconomy && ./manage.py set_webhook"
  args:
    executable: "/bin/bash"

- name: Set up stripe users
  become: yes
  become_user: "{{ env_prefix }}"
  shell: "source ~/.profile && source ~/bin/activate && cd ~/artconomy && ./manage.py create_stripe_users && touch {{home}}/.stripe-users-created"
  args:
    executable: "/bin/bash"
    creates: "{{ home }}/.stripe-users-created"
    warn: false


- name: Set up initial service plans
  become: yes
  become_user: "{{ env_prefix }}"
  shell: "source ~/.profile && source ~/bin/activate && cd ~/artconomy && ./manage.py initial_service_plans && touch {{home}}/.initial-service-plans-created"
  args:
    executable: "/bin/bash"
    creates: "{{ home }}/.initial-service-plans-created"
    warn: false


- name: Create anonymous user
  become: yes
  become_user: "{{ env_prefix }}"
  shell: "source ~/.profile && source ~/bin/activate && cd ~/artconomy && ./manage.py create_anonymous_user && touch {{home}}/.anonymous-user-created"
  args:
    executable: "/bin/bash"
    creates: "{{ home }}/.anonymous-user-created"
    warn: false
